<?php/* * Classe que representa a tabela "qualificacoes" da base "T-shaped"  * e os comandos de acesso aos dados */class qualificacoesDAO{    //atributos (variáveis) relacionadas as colunas da tabela    protected $id;    protected $nome;    protected $tipo;    protected $descricao;    protected $dt_cadastro;    //método construtor que já faz a conexão com o BD    public function qualificacoesDAO() {}    //métodos para obter e ajustar dados das variáveis (get e set)    // -- SET id    public function setId($id) {            $this->id = $id;    }    // -- GET id    public function getId() {            return $this->id;    }    // -- SET nome    public function setNome($nome) {            $this->nome = $nome;    }    // -- GET nome    public function getNome() {            return $this->nome;    }    // -- SET tipo    public function setTipo($tipo) {            $this->tipo = $tipo;    }    // -- GET tipo    public function getTipo() {            return $this->tipo;    }    // -- SET descricao    public function setDescricao($descricao) {            $this->descricao = $descricao;    }    // -- GET descricao    public function getDescricao() {            return $this->descricao;    }    // -- SET dt_cadastro    public function setDt_cadastro($dt_cadastro) {            $this->dt_cadastro = $dt_cadastro;    }    // -- GET dt_cadastro    public function getDt_cadastro() {            return $this->dt_cadastro;    }    /* Método que faz a inserção de um(a) qualificacoes no BD      * com base nos atributos do próprio objeto instanciado. */    public static function insert($obj) {        //pegar os dados do objeto        $id                             = $obj->getId();        $nome                           = $obj->getNome();        $tipo                           = $obj->getTipo();        $descricao                      = $obj->getDescricao();        $dt_cadastro                    = $obj->getDt_cadastro();        if (empty($dt_cadastro))                $dt_cadastro = "now()";        if (empty($dt_atualizacao))                $dt_atualizacao = "now()";        //montar o comando SQL        $sql = "insert into Qualificacoes                       (id                       ,nome                       ,tipo                       ,descricao                       ,dt_cadastro)                values                       ('$id'                       ,'$nome'                       ,'$tipo'                       ,'$descricao'                       ,'$dt_cadastro')";//die($sql);        $sql = str_replace("''", "null", $sql);        $sql = str_replace("'now()'", "now()", $sql);        // abre a conexão com o BD        $dba = new DbAdmin();        $dba->connectDefault();        //executar o comando SQL        $res = $dba->query($sql);        $retorno = Array();        if (!$res) {            $retorno[0] = mysql_errno();            $retorno[1] = mysql_error();            $retorno[2]  = "";        }        else {            $id = mysql_insert_id();            $sql = "select * from Qualificacoes where id = $id";            $res = $dba->query($sql);            $num = $dba->rows($res);            if (!$res) {                    $retorno[0] = mysql_errno();                    $retorno[1] = mysql_error();                    $retorno[2] = "";            }            else {                    $id                             = $dba->result($res, 0, "id");                    $nome                           = $dba->result($res, 0, "nome");                    $tipo                           = $dba->result($res, 0, "tipo");                    $descricao                      = $dba->result($res, 0, "descricao");                    $dt_cadastro                    = $dba->result($res, 0, "dt_cadastro");                    $retObj = new QualificacoesDAOExt();                    $retObj->setId($id);                    $retObj->setNome($nome);                    $retObj->setTipo($tipo);                    $retObj->setDescricao($descricao);                    $retObj->setDt_cadastro($dt_cadastro);                    $retorno[0] = 0;                    $retorno[1] = "";                    $retorno[2] = $retObj;            } // if (!$res)...        } // if (!$res)...        return $retorno;}                            /* Método que faz a atualização de um(a) qualificacoes no BD */    public static function update($obj) {        //pegar os dados do objeto        $id                             = $obj->getId();        $nome                           = $obj->getNome();        $tipo                           = $obj->getTipo();        $descricao                      = $obj->getDescricao();        //$dt_cadastro                    = $obj->getDt_cadastro();        /*if (empty($dt_atualizacao))                $dt_atualizacao = "now()";*/        //montar o comando SQL        $sql = "update Qualificacoes           set                nome                          = '$nome'               ,tipo                          = '$tipo'               ,descricao                     = '$descricao'         where id = $id";        $sql = str_replace("''", "null", $sql);        $sql = str_replace("'now()'", "now()", $sql);//DIE($sql);        // abre a conexão com o BD        $dba = new DbAdmin();        $dba->connectDefault();        //executar o comando SQL        $res = $dba->query($sql);        $retorno = Array();        if (!$res) {            $retorno[0] = mysql_errno();            $retorno[1] = mysql_error();            $retorno[2]  = "";        }        else {            $sql = "select * from Qualificacoes where id = $id";            $res = $dba->query($sql);                if (!$res) {                        $retorno[0] = mysql_errno();                        $retorno[1] = mysql_error();                        $retorno[2] = "";                }                else {                        $id                             = $dba->result($res, 0, "id");                        $nome                           = $dba->result($res, 0, "nome");                        $tipo                           = $dba->result($res, 0, "tipo");                        $descricao                      = $dba->result($res, 0, "descricao");                        $dt_cadastro                    = $dba->result($res, 0, "dt_cadastro");                        $retObj = new QualificacoesDAOExt();                        $retObj->setId($id);                        $retObj->setNome($nome);                        $retObj->setTipo($tipo);                        $retObj->setDescricao($descricao);                        $retObj->setDt_cadastro($dt_cadastro);                        $retorno[0] = 0;                        $retorno[1] = "";                        $retorno[2] = $retObj;                } // if (!$res)...        } // if (!$res)...	return $retorno;    }	    /* Método que faz a exclusão de um(a) qualificacoes no BD */    public static function delete(/*$id*/$where) {        //montar o comando SQL        //$sql = "delete from Qualificacoes where id = $id";        $sql = "delete from Qualificacoes where $where";//die($sql);        // abre a conexão com o BD        $dba = new DbAdmin();        $dba->connectDefault();        //executar o comando SQL        $res = $dba->query($sql);        $retorno = Array();        if (!$res) {            $retorno[0] = mysql_errno();            $retorno[1] = mysql_error();        }        else {            $retorno[0] = "0";            $retorno[1] = "";        }        return $retorno;    }	    /* Método estático que retorna os regsitros da tabela     * Qualificacoes conforme o filtro informado. */        public static function select($where="", $orderBy="", $limite=0, $offset=0) {		$dba = new DbAdmin();		$dba->connectDefault();		if (!empty($where))			$where = "where $where";		if (!empty($orderBy))			$where .= " order by $orderBy";		$sql = "select * from Qualificacoes $where";//die($sql);		if ($limite > 0)			$sql.= " limit " . $limite;		if ($offset > 0)			$sql.= " offset " . $offset;		$res = $dba->query($sql);		$num = $dba->rows($res);		$vet = array();		for ($i=0; $i < $num; $i++) {                    $id                             = $dba->result($res, $i, "id");                    $nome                           = $dba->result($res, $i, "nome");                    $tipo                           = $dba->result($res, $i, "tipo");                    $descricao                      = $dba->result($res, $i, "descricao");                    $dt_cadastro                    = $dba->result($res, $i, "dt_cadastro");                    $vet[$i] = new QualificacoesDAOExt();                    $vet[$i]->setId($id);                    $vet[$i]->setNome($nome);                    $vet[$i]->setTipo($tipo);                    $vet[$i]->setDescricao($descricao);                    $vet[$i]->setDt_cadastro($dt_cadastro);		}		$vetRetorno = Array(((!$num) ? 0 : $num), $vet);		//matriz com os dados (linhas e colunas)		return $vetRetorno;    }    /* Método estático que retorna um unico regsitro da tabela     * Qualificacoes conforme chave informada. */    public static function selectOne($id) {            $dba = new DbAdmin();            $dba->connectDefault();            $sql = "select * from Qualificacoes where id = '$id'";//die($sql);            $res = $dba->query($sql);            $num = $dba->rows($res);            $obj = new QualificacoesDAOExt();            if ($num > 0) {                $id                             = $dba->result($res, 0, "id");                $nome                           = $dba->result($res, 0, "nome");                $tipo                           = $dba->result($res, 0, "tipo");                $descricao                      = $dba->result($res, 0, "descricao");                $dt_cadastro                    = $dba->result($res, 0, "dt_cadastro");                $obj->setId($id);                $obj->setNome($nome);                $obj->setTipo($tipo);                $obj->setDescricao($descricao);                $obj->setDt_cadastro($dt_cadastro);            }            return $obj;    }            }?>